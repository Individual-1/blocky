name: Build docker archive for Mikrotik ARM64

on:
  push:
    branches:
      - main

permissions:
  actions: read
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm,arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          tags: placeholder/blocky:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image to local fs
        run: "docker save --output ${{ runner.temp }}/blocky-orig.tar placeholder/blocky:latest"

      - name: Run blocky through skopeo
        run: |
          wget https://github.com/lework/skopeo-binary/releases/latest/download/skopeo-linux-amd64
          install -m 0755 skopeo-linux-amd64 "/tmp/skopeo"
          cd ${{ runner.temp }}
          /tmp/skopeo copy docker-archive:blocky-orig.tar docker-archive:blocky.tar

      - name: Upload tar
        id: artifact-upload
        uses: actions/upload-artifact@v4
        with:
          name: blocky-image
          path: ${{ runner.temp }}/blocky.tar
          overwrite: true
          